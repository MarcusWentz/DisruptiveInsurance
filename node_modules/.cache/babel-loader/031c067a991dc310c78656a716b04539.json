{"ast":null,"code":"var _jsxFileName = \"/home/johanna/InsureDisruption/src/pages/Example.js\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport logo7 from \"../Images/logo7transparent.png\";\nimport logo8 from \"../Images/LOGO_8_TRANSPARENT.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"default\",\n      userGetData: {},\n      userSetData: \"\",\n      todoList: {},\n      storedDataResult: null,\n      userInput: \"\",\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.handleSendEth = this.handleSendEth.bind(this);\n    this.handleSetContract = this.handleSetContract.bind(this);\n    this.loadBlockchainData = this.loadBlockchainData.bind(this);\n    this.eventListener = this.eventListener.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable(); //Fetch account data:\n\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    this.setState({\n      account: accountFromMetaMask\n    }); //Load the smart contract\n\n    const todoList = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n    this.setState({\n      todoList: todoList\n    });\n    console.log(this.state.todoList, \"\"); //Set state for the result from storedData() Q: this is what i did before with await?\n\n    todoList.methods.storedData().call((err, result) => {\n      if (result === undefined) {\n        console.log(err, \"ERR\");\n      } else {\n        this.setState({\n          storedDataResult: result\n        });\n        console.log(result, this.state.storedDataResult, \"result returned storedData()\");\n      }\n    }); ///----Event will automatically read data\n\n    this.eventListener(todoList);\n  }\n\n  eventListener(todoList) {\n    let that = this;\n    todoList.events.setValueUpdatedViaWebjs({\n      fromBlock: \"latest\"\n    }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n      //Call the get function to get the most accurate present state for the value.\n      todoList.methods.storedData().call((err, result) => {\n        that.setState({\n          storedDataResult: result,\n          loading: false\n        });\n        console.log(result, \"Eventlistener result\");\n      });\n    }).on(\"changed\", function (eventResult) {// remove event from local database\n    }).on(\"error\", console.error);\n  }\n\n  handleSendEth() {\n    console.log(\"Bääääää send eth\");\n    let web3js = new Web3(window.web3.currentProvider);\n    web3js.eth.sendTransaction({\n      to: \"0xc1202e7d42655F23097476f6D48006fE56d38d4f\",\n      from: this.state.account[0],\n      value: web3js.utils.toWei(\"1\", \"ether\")\n    });\n  }\n\n  handleSetContract() {\n    console.log(\"Buuuuu set contract\", this.state.todoList);\n    let web3js = new Web3(window.web3.currentProvider);\n    web3js.eth.sendTransaction({\n      to: CONTRACT_ADDRESS,\n      data: this.state.todoList.methods.set(this.state.userInput).encodeABI(),\n      from: this.state.account[0]\n    });\n    this.setState({\n      loading: true\n    });\n  }\n\n  _whenToRenderSpinner() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner-border text-light\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  handleUserInput(event) {\n    this.setState({\n      userInput: event.target.value\n    });\n    console.log(this.state.userInput, \"user input handle change\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-container \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Set Contract Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-dark\",\n            onClick: this.handleSendEth,\n            children: \"Send Eth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-control\",\n            type: \"text\",\n            placeholder: \"Set your value . . . \",\n            onChange: this.handleUserInput,\n            value: this.state.userInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark\",\n              onClick: this.handleSetContract,\n              children: \"Set contract data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: \"center\"\n              },\n              className: \"v-txt\",\n              children: [\"Data you got back from the contract:\", /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \" \" + this.state.storedDataResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: this._whenToRenderSpinner()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/home/johanna/InsureDisruption/src/pages/Example.js"],"names":["CONTRACT_ADDRESS","ABI","React","Component","Web3","logo7","logo8","Example","constructor","props","state","account","userGetData","userSetData","todoList","storedDataResult","userInput","loading","componentDidMount","loadBlockchainData","handleSendEth","bind","handleSetContract","eventListener","handleUserInput","web3","givenProvider","network","eth","net","getNetworkType","window","ethereum","enable","accountFromMetaMask","getAccounts","setState","Contract","console","log","methods","storedData","call","err","result","undefined","that","events","setValueUpdatedViaWebjs","fromBlock","error","eventResult","on","web3js","currentProvider","sendTransaction","to","from","value","utils","toWei","data","set","encodeABI","_whenToRenderSpinner","event","target","render","textAlign"],"mappings":"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","sourcesContent":["import { CONTRACT_ADDRESS, ABI } from \"../config\";\n\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport logo7 from \"../Images/logo7transparent.png\";\nimport logo8 from \"../Images/LOGO_8_TRANSPARENT.png\";\n\nclass Example extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount: \"default\",\n\t\t\tuserGetData: {},\n\t\t\tuserSetData: \"\",\n\t\t\ttodoList: {},\n\t\t\tstoredDataResult: null,\n\t\t\tuserInput: \"\",\n\t\t\tloading: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData();\n\t\tthis.handleSendEth = this.handleSendEth.bind(this);\n\t\tthis.handleSetContract = this.handleSetContract.bind(this);\n\t\tthis.loadBlockchainData = this.loadBlockchainData.bind(this);\n\t\tthis.eventListener = this.eventListener.bind(this);\n\t\tthis.handleUserInput = this.handleUserInput.bind(this);\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\t\tconst network = await web3.eth.net.getNetworkType();\n\t\tawait window.ethereum.enable();\n\t\t//Fetch account data:\n\t\tconst accountFromMetaMask = await web3.eth.getAccounts();\n\t\tthis.setState({ account: accountFromMetaMask });\n\t\t//Load the smart contract\n\t\tconst todoList = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\t\tthis.setState({ todoList: todoList });\n\t\tconsole.log(this.state.todoList, \"\");\n\n\t\t//Set state for the result from storedData() Q: this is what i did before with await?\n\t\ttodoList.methods.storedData().call((err, result) => {\n\t\t\tif (result === undefined) {\n\t\t\t\tconsole.log(err, \"ERR\");\n\t\t\t} else {\n\t\t\t\tthis.setState({ storedDataResult: result });\n\t\t\t\tconsole.log(\n\t\t\t\t\tresult,\n\t\t\t\t\tthis.state.storedDataResult,\n\t\t\t\t\t\"result returned storedData()\"\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\t///----Event will automatically read data\n\t\tthis.eventListener(todoList);\n\t}\n\n\teventListener(todoList) {\n\t\tlet that = this;\n\t\ttodoList.events\n\t\t\t.setValueUpdatedViaWebjs(\n\t\t\t\t{\n\t\t\t\t\tfromBlock: \"latest\",\n\t\t\t\t},\n\t\t\t\tfunction (error, eventResult) {}\n\t\t\t)\n\t\t\t.on(\"data\", function (eventResult) {\n\t\t\t\t//Call the get function to get the most accurate present state for the value.\n\t\t\t\ttodoList.methods.storedData().call((err, result) => {\n\t\t\t\t\tthat.setState({ storedDataResult: result, loading: false });\n\t\t\t\t\tconsole.log(result, \"Eventlistener result\");\n\t\t\t\t});\n\t\t\t})\n\t\t\t.on(\"changed\", function (eventResult) {\n\t\t\t\t// remove event from local database\n\t\t\t})\n\t\t\t.on(\"error\", console.error);\n\t}\n\n\thandleSendEth() {\n\t\tconsole.log(\"Bääääää send eth\");\n\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\tweb3js.eth.sendTransaction({\n\t\t\tto: \"0xc1202e7d42655F23097476f6D48006fE56d38d4f\",\n\t\t\tfrom: this.state.account[0],\n\t\t\tvalue: web3js.utils.toWei(\"1\", \"ether\"),\n\t\t});\n\t}\n\n\thandleSetContract() {\n\t\tconsole.log(\"Buuuuu set contract\", this.state.todoList);\n\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\tweb3js.eth.sendTransaction({\n\t\t\tto: CONTRACT_ADDRESS,\n\t\t\tdata: this.state.todoList.methods\n\t\t\t\t.set(this.state.userInput)\n\t\t\t\t.encodeABI(),\n\t\t\tfrom: this.state.account[0],\n\t\t});\n\n\t\tthis.setState({ loading: true });\n\t}\n\n\t_whenToRenderSpinner() {\n\t\tif (this.state.loading) {\n\t\t\treturn <div class=\"spinner-border text-light\" role=\"status\"></div>;\n\t\t}\n\t}\n\n\thandleUserInput(event) {\n\t\tthis.setState({ userInput: event.target.value });\n\t\tconsole.log(this.state.userInput, \"user input handle change\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App-background\">\n\t\t\t\t<div className=\"center-container \">\n\t\t\t\t\t<h2 style={{ textAlign: \"center\" }}>Set Contract Data</h2>\n\n\t\t\t\t\t<div class=\"form-container\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-dark\"\n\t\t\t\t\t\t\tonClick={this.handleSendEth}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend Eth\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Set your value . . . \"\n\t\t\t\t\t\t\tonChange={this.handleUserInput}\n\t\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\t></input>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-dark\"\n\t\t\t\t\t\t\t\tonClick={this.handleSetContract}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSet contract data\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t\t\t\t\t\tclassName=\"v-txt\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tData you got back from the contract:\n\t\t\t\t\t\t\t\t<h4 style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t\t{\" \" + this.state.storedDataResult}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t{this._whenToRenderSpinner()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}