{"ast":null,"code":"var _jsxFileName = \"/home/johanna/InsureDisruption/Frontend/insuredisrupt/src/pages/Owner.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Owner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: this.props.account,\n      successMsg: \"\",\n      availableEth: \"\",\n      volcanoContract: null,\n      policyaddress: \"0x0000000000000000000000000000000000000000\",\n      allPolicyData: \"\",\n      accountsInsured: \"\",\n      errorMsg: \"\",\n      globalContractBalance: null,\n      calculatedWEI: -1\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.handleChangeUserInput = this.handleChangeUserInput.bind(this);\n    this.handleFundContract = this.handleFundContract.bind(this);\n    this.handleClaimExpiredPolicy = this.handleClaimExpiredPolicy.bind(this);\n    this.setInitialValues = this.setInitialValues.bind(this);\n    this.handleSelfDestruct = this.handleSelfDestruct.bind(this);\n    this.handleGetPolicyAddressData = this.handleGetPolicyAddressData.bind(this);\n    this.handleClaimNotConnectedPolicy = this.handleClaimNotConnectedPolicy.bind(this); //this.handleBuyPolicy = this.handleBuyPolicy.bind(this);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const network = await web3.eth.net.getNetworkType();\n    //await window.ethereum.enable();\n\n    const volcanoContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n    let globalContractBalance = await web3.eth.getBalance(CONTRACT_ADDRESS);\n    this.setState({\n      volcanoContract: volcanoContract,\n      globalContractBalance: globalContractBalance\n    });\n    console.log(\"ETT\", this.state.globalContractBalance, \"TVÅ\", this.state.getAvailableEth, \"tre\", this.state.accountsInsured);\n\n    if (typeof this.state.globalContractBalance !== \"undefined\" || this.state.globalContractBalance !== \"\" && typeof this.state.getAvailableEth !== \"undefined\" || this.state.getAvailableEth !== \"\" && typeof this.state.accountsInsured !== \"undefined\" || this.state.accountsInsured !== \"\") {\n      console.log(\"IN IFFFFFFFFF\", \"ETT\", this.state.globalContractBalance, \"TVÅ\", this.state.getAvailableEth, \"tre\", this.state.accountsInsured);\n      setTimeout(function () {\n        let calculatedWEI = this.state.globalContractBalance - (this.state.getAvailableEth + this.state.accountsInsured);\n        this.setState({\n          calculatedWEI: calculatedWEI\n        });\n      }, 1000);\n    } //GET inital values\n\n\n    this.setInitialValues(volcanoContract); ///----Event will automatically read data\n\n    this.eventListener(volcanoContract);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.account !== this.props.account) {\n      this.loadBlockchainData();\n    }\n  }\n\n  setInitialValues(volcanoContract) {\n    let that = this;\n    volcanoContract.methods.OpenWEItoInsure().call().then(res => {\n      that.setState({\n        getAvailableEth: res\n      });\n      console.log(that.state.getAvailableEthToInsure, \"avail eth:\");\n    });\n    volcanoContract.methods.LockedWEItoPolicies().call().then(res => {\n      that.setState({\n        accountsInsured: res\n      });\n      console.log(res, \"accountsinsured res\");\n    });\n  }\n\n  eventListener(volcanoContract) {\n    let that = this;\n    volcanoContract.events.eventBlockTime({\n      fromBlock: \"latest\"\n    }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n      //Call the get function to get the most accurate present state for the value.\n      that.setInitialValues(volcanoContract);\n\n      if (this.state.globalContractBalance && this.state.getAvailableEth && this.state.accountsInsured) {\n        let calculatedWEI = this.state.globalContractBalance - (this.state.getAvailableEth + this.state.accountsInsured);\n        this.setState({\n          calculatedWEI: calculatedWEI\n        });\n      }\n    }).on(\"changed\", function (eventResult) {// remove event from local database\n    }).on(\"error\", console.error);\n  }\n\n  handleChangeUserInput(event) {\n    let value = event.target.value;\n    let name = event.target.dataset.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.policyaddress, \"policy addr from user inptu\");\n  }\n\n  handleFundContract() {\n    if (this.props.account[0]) {\n      let web3js = new Web3(window.web3.currentProvider);\n      web3js.eth.sendTransaction({\n        to: CONTRACT_ADDRESS,\n        data: this.state.volcanoContract.methods.OwnerSendOneEthToContractFromInsuranceBusiness().encodeABI(),\n        value: 1000000000000000000,\n        from: this.props.account[0]\n      });\n    } else this.setState({\n      errorMsg: \"You have to connect to metamask!\"\n    });\n  }\n\n  handleClaimNotConnectedPolicy() {\n    if (this.props.account[0]) {\n      let web3js = new Web3(window.web3.currentProvider);\n      web3js.eth.sendTransaction({\n        to: CONTRACT_ADDRESS,\n        data: this.state.volcanoContract.methods.OwnerLiquidtoOpenETHToWithdraw().encodeABI(),\n        from: this.props.account[0]\n      });\n    } else this.setState({\n      errorMsg: \"You have to connect to metamask!\"\n    });\n  }\n\n  handleClaimExpiredPolicy() {\n    if (this.props.account[0]) {\n      console.log(this.state.policyaddress, \"policy address sent in:\");\n      let web3js = new Web3(window.web3.currentProvider);\n      web3js.eth.sendTransaction({\n        to: CONTRACT_ADDRESS,\n        data: this.state.volcanoContract.methods.OwnerClaimExpiredPolicyETH(this.state.policyaddress).encodeABI(),\n        from: this.props.account[0]\n      });\n    } else this.setState({\n      errorMsg: \"You have to specify a policy address!\"\n    });\n  }\n\n  handleSelfDestruct() {\n    if (this.props.account[0]) {\n      let web3js = new Web3(window.web3.currentProvider);\n      web3js.eth.sendTransaction({\n        to: CONTRACT_ADDRESS,\n        data: this.state.volcanoContract.methods.OwnerSelfDestructClaimETH().encodeABI(),\n        from: this.props.account[0]\n      });\n    } else this.setState({\n      errorMsg: \"You have to specify a policy address!\"\n    });\n  }\n\n  async handleGetPolicyAddressData() {\n    if (this.props.account[0]) {\n      let allPolicyData = await this.state.volcanoContract.methods.policies(this.state.policyaddress).call();\n      this.setState({\n        allPolicyData: allPolicyData,\n        errorMsg: \"\"\n      });\n      console.log(this.state.allPolicyData.DaySigned, \"all policy data\");\n    } else this.setState({\n      errorMsg: \"You have to specify a policy address!\"\n    });\n  }\n\n  render() {\n    const {\n      allPolicyData\n    } = this.state;\n    console.log(this.state.globalContractBalance, this.state.getAvailableEth, this.state.accountsInsured, \"bräääääääääk\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-background\",\n      children: [this.state.errorMsg ? /*#__PURE__*/_jsxDEV(ErrorModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 28\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-container-buy \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"form-container-buy\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"available-eth-container owner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                textAlign: \"center\"\n              },\n              className: \"v-txt\",\n              children: \"Available ETH to insure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"center\"\n              },\n              className: \"v-txt\",\n              children: this.state.getAvailableEth / 1000000000000000000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-dark-fund-contract\",\n            onClick: this.handleFundContract,\n            children: \"Fund Contract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark-not-connected\",\n              onClick: this.handleClaimNotConnectedPolicy,\n              children: \"Claim 1 ETH not connected to a policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"available-eth-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Accounts Insured: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 27\n              }, this), this.state.accountsInsured / 1000000000000000000]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container policyaddress\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"label-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"long\",\n                children: \"POLICY ADDRESS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"policyaddress\",\n                placeholder: \"Policy Address . . .\",\n                onChange: this.handleChangeUserInput,\n                value: this.state.policyaddress,\n                \"data-name\": \"policyaddress\",\n                style: {\n                  width: 500\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"orange\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark-policy-data\",\n              onClick: this.handleGetPolicyAddressData,\n              children: \"Get Policy Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", \"Lat: \" + allPolicyData.LatitudeInsured + \" Long: \" + allPolicyData.LongitudeInsured + \" Sign Date: \" + allPolicyData.YearSigned + \"/\" + allPolicyData.MonthSigned + \"/\" + allPolicyData.DaySigned + \" ETH Locked: \" + allPolicyData.EthereumAwardTiedToAddress]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark-expired-policy\",\n              onClick: this.handleClaimExpiredPolicy,\n              children: \"Claim 1 ETH from expired policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount of self-destructed WEI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this), this.state.calculatedWEI, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark-self-destruct\",\n              onClick: this.handleSelfDestruct,\n              children: \"Claim all ETH from a self-destruct attack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Owner;","map":{"version":3,"sources":["/home/johanna/InsureDisruption/Frontend/insuredisrupt/src/pages/Owner.js"],"names":["React","Component","Web3","CONTRACT_ADDRESS","ABI","ErrorModal","Owner","constructor","props","state","account","successMsg","availableEth","volcanoContract","policyaddress","allPolicyData","accountsInsured","errorMsg","globalContractBalance","calculatedWEI","componentDidMount","loadBlockchainData","handleChangeUserInput","bind","handleFundContract","handleClaimExpiredPolicy","setInitialValues","handleSelfDestruct","handleGetPolicyAddressData","handleClaimNotConnectedPolicy","web3","givenProvider","eth","Contract","getBalance","setState","console","log","getAvailableEth","setTimeout","eventListener","componentDidUpdate","prevProps","prevState","that","methods","OpenWEItoInsure","call","then","res","getAvailableEthToInsure","LockedWEItoPolicies","events","eventBlockTime","fromBlock","error","eventResult","on","event","value","target","name","dataset","web3js","window","currentProvider","sendTransaction","to","data","OwnerSendOneEthToContractFromInsuranceBusiness","encodeABI","from","OwnerLiquidtoOpenETHToWithdraw","OwnerClaimExpiredPolicyETH","OwnerSelfDestructClaimETH","policies","DaySigned","render","textAlign","width","color","LatitudeInsured","LongitudeInsured","YearSigned","MonthSigned","EthereumAwardTiedToAddress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\nclass Owner extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount: this.props.account,\n\t\t\tsuccessMsg: \"\",\n\t\t\tavailableEth: \"\",\n\t\t\tvolcanoContract: null,\n\t\t\tpolicyaddress: \"0x0000000000000000000000000000000000000000\",\n\t\t\tallPolicyData: \"\",\n\t\t\taccountsInsured: \"\",\n\t\t\terrorMsg: \"\",\n\t\t\tglobalContractBalance: null,\n\t\t\tcalculatedWEI: -1,\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData();\n\t\tthis.handleChangeUserInput = this.handleChangeUserInput.bind(this);\n\t\tthis.handleFundContract = this.handleFundContract.bind(this);\n\t\tthis.handleClaimExpiredPolicy =\n\t\t\tthis.handleClaimExpiredPolicy.bind(this);\n\n\t\tthis.setInitialValues = this.setInitialValues.bind(this);\n\t\tthis.handleSelfDestruct = this.handleSelfDestruct.bind(this);\n\t\tthis.handleGetPolicyAddressData =\n\t\t\tthis.handleGetPolicyAddressData.bind(this);\n\n\t\tthis.handleClaimNotConnectedPolicy =\n\t\t\tthis.handleClaimNotConnectedPolicy.bind(this);\n\n\t\t//this.handleBuyPolicy = this.handleBuyPolicy.bind(this);\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\t\t//const network = await web3.eth.net.getNetworkType();\n\t\t//await window.ethereum.enable();\n\t\tconst volcanoContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n\t\tlet globalContractBalance = await web3.eth.getBalance(CONTRACT_ADDRESS);\n\n\t\tthis.setState({\n\t\t\tvolcanoContract: volcanoContract,\n\t\t\tglobalContractBalance: globalContractBalance,\n\t\t});\n\n\t\tconsole.log(\n\t\t\t\"ETT\",\n\t\t\tthis.state.globalContractBalance,\n\t\t\t\"TVÅ\",\n\t\t\tthis.state.getAvailableEth,\n\t\t\t\"tre\",\n\t\t\tthis.state.accountsInsured\n\t\t);\n\t\tif (\n\t\t\ttypeof this.state.globalContractBalance !== \"undefined\" ||\n\t\t\t(this.state.globalContractBalance !== \"\" &&\n\t\t\t\ttypeof this.state.getAvailableEth !== \"undefined\") ||\n\t\t\t(this.state.getAvailableEth !== \"\" &&\n\t\t\t\ttypeof this.state.accountsInsured !== \"undefined\") ||\n\t\t\tthis.state.accountsInsured !== \"\"\n\t\t) {\n\t\t\tconsole.log(\n\t\t\t\t\"IN IFFFFFFFFF\",\n\t\t\t\t\"ETT\",\n\t\t\t\tthis.state.globalContractBalance,\n\t\t\t\t\"TVÅ\",\n\t\t\t\tthis.state.getAvailableEth,\n\t\t\t\t\"tre\",\n\t\t\t\tthis.state.accountsInsured\n\t\t\t);\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet calculatedWEI =\n\t\t\t\t\tthis.state.globalContractBalance -\n\t\t\t\t\t(this.state.getAvailableEth + this.state.accountsInsured);\n\t\t\t\tthis.setState({ calculatedWEI: calculatedWEI });\n\t\t\t}, 1000);\n\t\t}\n\n\t\t//GET inital values\n\t\tthis.setInitialValues(volcanoContract);\n\t\t///----Event will automatically read data\n\t\tthis.eventListener(volcanoContract);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevProps.account !== this.props.account) {\n\t\t\tthis.loadBlockchainData();\n\t\t}\n\t}\n\n\tsetInitialValues(volcanoContract) {\n\t\tlet that = this;\n\t\tvolcanoContract.methods\n\t\t\t.OpenWEItoInsure()\n\t\t\t.call()\n\t\t\t.then((res) => {\n\t\t\t\tthat.setState({\n\t\t\t\t\tgetAvailableEth: res,\n\t\t\t\t});\n\t\t\t\tconsole.log(that.state.getAvailableEthToInsure, \"avail eth:\");\n\t\t\t});\n\n\t\tvolcanoContract.methods\n\t\t\t.LockedWEItoPolicies()\n\t\t\t.call()\n\t\t\t.then((res) => {\n\t\t\t\tthat.setState({\n\t\t\t\t\taccountsInsured: res,\n\t\t\t\t});\n\t\t\t\tconsole.log(res, \"accountsinsured res\");\n\t\t\t});\n\t}\n\n\teventListener(volcanoContract) {\n\t\tlet that = this;\n\t\tvolcanoContract.events\n\t\t\t.eventBlockTime(\n\t\t\t\t{\n\t\t\t\t\tfromBlock: \"latest\",\n\t\t\t\t},\n\t\t\t\tfunction (error, eventResult) {}\n\t\t\t)\n\t\t\t.on(\"data\", function (eventResult) {\n\t\t\t\t//Call the get function to get the most accurate present state for the value.\n\t\t\t\tthat.setInitialValues(volcanoContract);\n\t\t\t\tif (\n\t\t\t\t\tthis.state.globalContractBalance &&\n\t\t\t\t\tthis.state.getAvailableEth &&\n\t\t\t\t\tthis.state.accountsInsured\n\t\t\t\t) {\n\t\t\t\t\tlet calculatedWEI =\n\t\t\t\t\t\tthis.state.globalContractBalance -\n\t\t\t\t\t\t(this.state.getAvailableEth +\n\t\t\t\t\t\t\tthis.state.accountsInsured);\n\t\t\t\t\tthis.setState({ calculatedWEI: calculatedWEI });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"changed\", function (eventResult) {\n\t\t\t\t// remove event from local database\n\t\t\t})\n\t\t\t.on(\"error\", console.error);\n\t}\n\n\thandleChangeUserInput(event) {\n\t\tlet value = event.target.value;\n\t\tlet name = event.target.dataset.name;\n\t\tthis.setState({ [name]: value });\n\t\tconsole.log(this.state.policyaddress, \"policy addr from user inptu\");\n\t}\n\n\thandleFundContract() {\n\t\tif (this.props.account[0]) {\n\t\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\t\tweb3js.eth.sendTransaction({\n\t\t\t\tto: CONTRACT_ADDRESS,\n\t\t\t\tdata: this.state.volcanoContract.methods\n\t\t\t\t\t.OwnerSendOneEthToContractFromInsuranceBusiness()\n\t\t\t\t\t.encodeABI(),\n\t\t\t\tvalue: 1000000000000000000,\n\t\t\t\tfrom: this.props.account[0],\n\t\t\t});\n\t\t} else\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: \"You have to connect to metamask!\",\n\t\t\t});\n\t}\n\n\thandleClaimNotConnectedPolicy() {\n\t\tif (this.props.account[0]) {\n\t\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\t\tweb3js.eth.sendTransaction({\n\t\t\t\tto: CONTRACT_ADDRESS,\n\t\t\t\tdata: this.state.volcanoContract.methods\n\t\t\t\t\t.OwnerLiquidtoOpenETHToWithdraw()\n\t\t\t\t\t.encodeABI(),\n\t\t\t\tfrom: this.props.account[0],\n\t\t\t});\n\t\t} else\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: \"You have to connect to metamask!\",\n\t\t\t});\n\t}\n\n\thandleClaimExpiredPolicy() {\n\t\tif (this.props.account[0]) {\n\t\t\tconsole.log(this.state.policyaddress, \"policy address sent in:\");\n\t\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\t\tweb3js.eth.sendTransaction({\n\t\t\t\tto: CONTRACT_ADDRESS,\n\t\t\t\tdata: this.state.volcanoContract.methods\n\t\t\t\t\t.OwnerClaimExpiredPolicyETH(this.state.policyaddress)\n\t\t\t\t\t.encodeABI(),\n\t\t\t\tfrom: this.props.account[0],\n\t\t\t});\n\t\t} else\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: \"You have to specify a policy address!\",\n\t\t\t});\n\t}\n\n\thandleSelfDestruct() {\n\t\tif (this.props.account[0]) {\n\t\t\tlet web3js = new Web3(window.web3.currentProvider);\n\t\t\tweb3js.eth.sendTransaction({\n\t\t\t\tto: CONTRACT_ADDRESS,\n\t\t\t\tdata: this.state.volcanoContract.methods\n\t\t\t\t\t.OwnerSelfDestructClaimETH()\n\t\t\t\t\t.encodeABI(),\n\t\t\t\tfrom: this.props.account[0],\n\t\t\t});\n\t\t} else\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: \"You have to specify a policy address!\",\n\t\t\t});\n\t}\n\n\tasync handleGetPolicyAddressData() {\n\t\tif (this.props.account[0]) {\n\t\t\tlet allPolicyData = await this.state.volcanoContract.methods\n\t\t\t\t.policies(this.state.policyaddress)\n\t\t\t\t.call();\n\t\t\tthis.setState({\n\t\t\t\tallPolicyData: allPolicyData,\n\t\t\t\terrorMsg: \"\",\n\t\t\t});\n\t\t\tconsole.log(this.state.allPolicyData.DaySigned, \"all policy data\");\n\t\t} else\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: \"You have to specify a policy address!\",\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { allPolicyData } = this.state;\n\t\tconsole.log(\n\t\t\tthis.state.globalContractBalance,\n\t\t\tthis.state.getAvailableEth,\n\t\t\tthis.state.accountsInsured,\n\t\t\t\"bräääääääääk\"\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App-background\">\n\t\t\t\t{this.state.errorMsg ? <ErrorModal /> : null}\n\n\t\t\t\t<div className=\"center-container-buy \">\n\t\t\t\t\t<h2 style={{ textAlign: \"center\" }}>Owner</h2>\n\n\t\t\t\t\t<form class=\"form-container-buy\">\n\t\t\t\t\t\t<div class=\"available-eth-container owner\">\n\t\t\t\t\t\t\t<h5\n\t\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t\t\t\t\t\tclassName=\"v-txt\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAvailable ETH to insure:\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t<h6\n\t\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t\t\t\t\t\tclassName=\"v-txt\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.getAvailableEth /\n\t\t\t\t\t\t\t\t\t1000000000000000000}\n\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-dark-fund-contract\"\n\t\t\t\t\t\t\tonClick={this.handleFundContract}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFund Contract\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-dark-not-connected\"\n\t\t\t\t\t\t\t\tonClick={this.handleClaimNotConnectedPolicy}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClaim 1 ETH not connected to a policy\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"available-eth-container\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAccounts Insured: <br />\n\t\t\t\t\t\t\t\t{this.state.accountsInsured /\n\t\t\t\t\t\t\t\t\t1000000000000000000}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"container policyaddress\">\n\t\t\t\t\t\t\t<div class=\"label-input-container\">\n\t\t\t\t\t\t\t\t<label for=\"long\">POLICY ADDRESS</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"policyaddress\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Policy Address . . .\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeUserInput}\n\t\t\t\t\t\t\t\t\tvalue={this.state.policyaddress}\n\t\t\t\t\t\t\t\t\tdata-name=\"policyaddress\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: 500 }}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p style={{ color: \"orange\" }}></p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-dark-policy-data\"\n\t\t\t\t\t\t\t\tonClick={this.handleGetPolicyAddressData}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGet Policy Data\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t{\"Lat: \" +\n\t\t\t\t\t\t\t\t\tallPolicyData.LatitudeInsured +\n\t\t\t\t\t\t\t\t\t\" Long: \" +\n\t\t\t\t\t\t\t\t\tallPolicyData.LongitudeInsured +\n\t\t\t\t\t\t\t\t\t\" Sign Date: \" +\n\t\t\t\t\t\t\t\t\tallPolicyData.YearSigned +\n\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\tallPolicyData.MonthSigned +\n\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\tallPolicyData.DaySigned +\n\t\t\t\t\t\t\t\t\t\" ETH Locked: \" +\n\t\t\t\t\t\t\t\t\tallPolicyData.EthereumAwardTiedToAddress}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-dark-expired-policy\"\n\t\t\t\t\t\t\t\tonClick={this.handleClaimExpiredPolicy}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClaim 1 ETH from expired policy\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<label>Amount of self-destructed WEI:</label>\n\n\t\t\t\t\t\t{this.state.calculatedWEI}\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-dark-self-destruct\"\n\t\t\t\t\t\t\t\tonClick={this.handleSelfDestruct}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClaim all ETH from a self-destruct attack\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Owner;\n"]},"metadata":{},"sourceType":"module"}