{"ast":null,"code":"var _jsxFileName = \"/home/johanna/InsureDisruption/Frontend/insuredisrupt/src/pages/Home.js\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport MeetTheTeam from \"../components/MeetTheTeam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"default\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-container-buy \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Disruptive Volcano Insurance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"form-container-about\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"about-header\",\n            children: \"What it does\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-description\",\n            children: [\"Disruptive Insurance is an exotic insurance service that allows users to buy insurance against volcano eruptions. No other insurance business on Earth offers volcano eruption insurance.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 8\n            }, this), \" The contract owner sends ETH to the insurance contract. Anyone with a Metamask wallet can buy an insurance policy which is then tied to their address, defined by their coordinates and the date they purchased the policy. One ETH sent to the contract is then locked for the duration of the policy to be paid out in the event a claim needs to be made. If a volcano erupts within 1 coordinate point from the policy holder\\u2019s location before the expiration of the contract, the holder can then claim the ETH that was initially locked to their policy as their insurance payout. However, if the policy expires without a relevant volcano eruption, the contract owner can claim the ETH that was locked to the policy. Owners can even claim ETH from self destruct attacks!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            marginTop: 100\n          },\n          class: \"form-container-about\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"about-header\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Buyer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this), \"1.Oracle: Get present time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), \"2.Record address, time, input coordinates and locked Owner ETH for policy. Claim Reward from qualified policy:\", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Oracle:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), \"1. Get filtered volcano eruption data (time, coordinates)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this), \"2. Check if policy is older than eruption date and the coordinates are within + or - 1 coordinate point. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), \"3. Policy holder claims 1 ETH if Step 2 checks are true then deletes policy data.\", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this), \"Owner: Attract Buyers: 1.Add funds to make policies available with OwnerSendOneEthToContractFromInsuranceBusiness. Claim ETH Get paid directly after a policy is bought. Expired Claim: 1.Oracle: Get present time 2.Check if policy connected to a mapped address is over 1 year old. 3.Liquidate ETH from policy and delete policy data. Claim ETH not tied to policy 1.Check if OpenETHtoInsure is greater than 0. 2.Claim one ETH from contract. Self Destruct 1.If the sum of AccountsInsured and OpenETHtoInsure is greater than smart contract ETH balance, then a self destruct attack occurred and you can claim that ETH.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MeetTheTeam, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/johanna/InsureDisruption/Frontend/insuredisrupt/src/pages/Home.js"],"names":["CONTRACT_ADDRESS","ABI","React","Component","Web3","MeetTheTeam","Home","constructor","props","state","account","render","textAlign","marginTop"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,GAA3B,QAAsC,WAAtC;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AADG,KAAb;AAGA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACC;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAKC;AAAM,UAAA,KAAK,EAAC,sBAAZ;AAAA,kCACC;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,iOAKC;AAAA;AAAA;AAAA;AAAA,oBALD,eAMC;AAAA;AAAA;AAAA;AAAA,oBAND;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,eA+BC;AACC,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WADR;AAEC,UAAA,KAAK,EAAC,sBAFP;AAAA,kCAIC;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAKC;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,6CAGC;AAAA;AAAA;AAAA;AAAA,oBAHD,iIAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPD,4EAUC;AAAA;AAAA;AAAA;AAAA,oBAVD,4HAaQ;AAAA;AAAA;AAAA;AAAA,oBAbR,oGAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBD,oBAgBgB;AAAA;AAAA;AAAA;AAAA,oBAhBhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAuEC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAvED;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA2EA;;AApF2B;;AAuF7B,eAAeP,IAAf","sourcesContent":["import { CONTRACT_ADDRESS, ABI } from \"../config\";\n\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport MeetTheTeam from \"../components/MeetTheTeam\";\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount: \"default\",\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App-background\">\n\t\t\t\t<div className=\"center-container-buy \">\n\t\t\t\t\t<h2 style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\tDisruptive Volcano Insurance\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<form class=\"form-container-about\">\n\t\t\t\t\t\t<h2 className=\"about-header\">What it does</h2>\n\t\t\t\t\t\t<p className=\"project-description\">\n\t\t\t\t\t\t\tDisruptive Insurance is an exotic insurance service\n\t\t\t\t\t\t\tthat allows users to buy insurance against volcano\n\t\t\t\t\t\t\teruptions. No other insurance business on Earth\n\t\t\t\t\t\t\toffers volcano eruption insurance.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br /> The contract owner sends ETH to the insurance\n\t\t\t\t\t\t\tcontract. Anyone with a Metamask wallet can buy an\n\t\t\t\t\t\t\tinsurance policy which is then tied to their\n\t\t\t\t\t\t\taddress, defined by their coordinates and the date\n\t\t\t\t\t\t\tthey purchased the policy. One ETH sent to the\n\t\t\t\t\t\t\tcontract is then locked for the duration of the\n\t\t\t\t\t\t\tpolicy to be paid out in the event a claim needs to\n\t\t\t\t\t\t\tbe made. If a volcano erupts within 1 coordinate\n\t\t\t\t\t\t\tpoint from the policy holderâ€™s location before the\n\t\t\t\t\t\t\texpiration of the contract, the holder can then\n\t\t\t\t\t\t\tclaim the ETH that was initially locked to their\n\t\t\t\t\t\t\tpolicy as their insurance payout. However, if the\n\t\t\t\t\t\t\tpolicy expires without a relevant volcano eruption,\n\t\t\t\t\t\t\tthe contract owner can claim the ETH that was locked\n\t\t\t\t\t\t\tto the policy. Owners can even claim ETH from self\n\t\t\t\t\t\t\tdestruct attacks!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t\t<form\n\t\t\t\t\t\tstyle={{ marginTop: 100 }}\n\t\t\t\t\t\tclass=\"form-container-about\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2 className=\"about-header\">Instructions</h2>\n\t\t\t\t\t\t<p className=\"project-description\">\n\t\t\t\t\t\t\t<h4>Buyer:</h4>\n\t\t\t\t\t\t\t1.Oracle: Get present time\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t2.Record address, time, input coordinates and locked\n\t\t\t\t\t\t\tOwner ETH for policy. Claim Reward from qualified\n\t\t\t\t\t\t\tpolicy:\n\t\t\t\t\t\t\t<h4>Oracle:</h4>\n\t\t\t\t\t\t\t1. Get filtered volcano eruption data (time,\n\t\t\t\t\t\t\tcoordinates)\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t2. Check if policy is older than eruption date and\n\t\t\t\t\t\t\tthe coordinates are within + or - 1 coordinate\n\t\t\t\t\t\t\tpoint. <br />\n\t\t\t\t\t\t\t3. Policy holder claims 1 ETH if Step 2 checks are\n\t\t\t\t\t\t\ttrue then deletes policy data.\n\t\t\t\t\t\t\t<h4>Owner</h4> <br />\n\t\t\t\t\t\t\tOwner: Attract Buyers: 1.Add funds to make policies\n\t\t\t\t\t\t\tavailable with\n\t\t\t\t\t\t\tOwnerSendOneEthToContractFromInsuranceBusiness.\n\t\t\t\t\t\t\tClaim ETH Get paid directly after a policy is\n\t\t\t\t\t\t\tbought. Expired Claim: 1.Oracle: Get present time\n\t\t\t\t\t\t\t2.Check if policy connected to a mapped address is\n\t\t\t\t\t\t\tover 1 year old. 3.Liquidate ETH from policy and\n\t\t\t\t\t\t\tdelete policy data. Claim ETH not tied to policy\n\t\t\t\t\t\t\t1.Check if OpenETHtoInsure is greater than 0.\n\t\t\t\t\t\t\t2.Claim one ETH from contract. Self Destruct 1.If\n\t\t\t\t\t\t\tthe sum of AccountsInsured and OpenETHtoInsure is\n\t\t\t\t\t\t\tgreater than smart contract ETH balance, then a self\n\t\t\t\t\t\t\tdestruct attack occurred and you can claim that ETH.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<MeetTheTeam />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}